@inject IJSRuntime JsRuntime

@page "/counter"
<div class="main">
    <h1>Counter</h1>

    <p>Current count: @currentCount</p>

    <button class="btn btn-primary" @onclick="IncrementCount">catch mouseeventargs</button>
    <button class="btn btn-primary" @onclick="() => currentCount++">[()=>]</button>
    <button class="btn btn-primary" @onclick='mouseEvent => HandleClick(mouseEvent, "Hello ")'>Handle Ctrl key</button>

    <button class="btn btn-primary" @onclick="ChangeFocus">Change focus</button>
    <input placeholder="Handle focus" @ref=MyInput @onfocus="HandleFocusAsync" value="@data"/>

    <input id="myinput1" placeholder="lower 2 UPPER" @onkeypress="keyEvent => ProcessKeyPress(keyEvent)" @onkeypress:preventDefault value=@lower2upper/>
    
    <div @onclick="HandleDivClick">
        <button class="btn btn-primary" @onclick="IncrementCount" @onclick:stopPropagation>Propagate</button>
        <input id="myinput2" @onkeypress="ProcessKeyPress" @onkeypress:preventDefault value=@data/>
    </div>

</div>

@code {
    private int currentCount = 0;
    private ElementReference MyInput;
    private string data;
    private string lower2upper;

    private async Task HandleDivClick()
    {
        await JsRuntime.InvokeVoidAsync("alert", "Div click");
    }

    private void IncrementCount(MouseEventArgs e)
    {
        if (e.CtrlKey) // Ctrl key pressed as well
        {
            currentCount += 5;
        }
        else
        {
            currentCount++;
        }
    }

    private async Task ChangeFocus()
    {
        await MyInput.FocusAsync();
    }

    private void HandleFocusAsync()
    {
        data = "Focused";
    }

    private async Task HandleClick(MouseEventArgs e, string msg)
    {
        if (e.CtrlKey) // Ctrl key pressed as well
        {
            currentCount += 5;
            msg = msg + currentCount;
            await JsRuntime.InvokeVoidAsync("alert", msg);
        }
        else
        {
            currentCount++;
        }
    }

    private async Task ProcessKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "@")
        {
            await JsRuntime.InvokeVoidAsync("alert", "You pressed @");
        }
        else
        {
            lower2upper += e.Key.ToUpper();
        }
    }
}